stages:
  - build
  - test
  - docker-build
  - deploy

# build:
#   stage: build
#   image: node:14
#   script:
#     - echo "Start building App"
#     - npm install
#     - npm run start:prod
#     - echo "Build successfully!"
#   artifacts:
#     expire_in: 1 hour
#     paths:
#       - build
#       - node_modules/

# test:
#   stage: test
#   image: node:14
#   script:
#     - echo "Testing App"
#     - npm install
#     - npm run test
#     - echo "Test successfully!"

# docker-build:
#   stage: docker-build
#   image: docker:latest
#   services:
#     - name: docker:19.03.8-dind
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#   script:
#     - docker build --pull -t "$CI_REGISTRY_IMAGE" .
#     - docker push "$CI_REGISTRY_IMAGE"
#     - echo "Registry image:" $CI_REGISTRY_IMAGE

deploy:
  stage: deploy
  image: harbor.zinza.com.vn/hieulv/training-server:latest
  before_script:
    - echo "deploying app"
  script:
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY root@$PROD_SERVER_IP "docker pull harbor.zinza.com.vn/hieulv/training-server:latest"
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY root@$PROD_SERVER_IP "docker stop server-app || true && docker rm server-app || true"
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY root@$PROD_SERVER_IP "docker run -p 3001:80 -d --name server-app harbor.zinza.com.vn/hieulv/training-client:latest"
