# image: docker:20.10.10-alpine3.14

# services:
#   - docker:20.10.10-dind-alpine3.14

# image: ubuntu

stages:
  # - build
  # - release
  - deploy

# variables:
#   CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
#   CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

# before_script:
#   - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

# build:
#   stage: build
#   script:
#     - docker build -t $CONTAINER_TEST_IMAGE .
#     - docker push $CONTAINER_TEST_IMAGE

# release-image:
#   stage: release
#   script:
#     - docker pull $CONTAINER_TEST_IMAGE
#     - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
#     - docker push $CONTAINER_RELEASE_IMAGE

# step-deploy-staging:
#   stage: deploy
#   image: docker/compose:alpine-1.29.2
#   only:
#     - develop
#   script:
#     - docker-compose -f docker-compose.dev.yml up -d

step-deploy-production:
  image: kroniak/ssh-client
  stage: deploy
  tags: 
    - zinza
  script:
    - ssh devops@10.0.0.199
    - eval $(123a!@#)
    # - ssh devops@10.0.0.199 "cd apps/training-server && git checkout master && git fetch && git pull  && npm install && docker-compose -f docker-compose.yml up -d"
  only:
    - master
