# image: docker:20.10.10-alpine3.14

# services:
#   - docker:20.10.10-dind-alpine3.14

stages:
  - build
  - test
  - staging
  - production

# variables:
#   CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

# before_script:
#   - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

# compile:
#   stage: build
#   script:
#     - docker build -t $CONTAINER_TEST_IMAGE .
#     - docker push $CONTAINER_TEST_IMAGE

deploy-to-stage:
  image: linuxserver/openssh-server:amd64-latest
  stage: staging
  before_script:
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh
    - chmod 700 ~/.ssh
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh
    - ssh-keyscan -H $PROD_SERVER_IP >> ~/.ssh/known_hosts
  script:
    - echo "success!"

# deploy-to-prod:
#   image: linuxserver/openssh-server:amd64-latest
#   stage: production
#   before_script:
#     - mkdir -p ~/.ssh
#     - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
#     - chmod 700 ~/.ssh/id_rsa
#     - eval "$(ssh-agent -s)"
#     - ssh-add ~/.ssh/id_rsa
#     - ssh-keyscan -H $PROD_SERVER_IP >> ~/.ssh/known_hosts
#   script:
#     - ssh devops@10.0.0.199 "cd apps/training-server && git checkout master && git fetch && git pull  && npm install && docker-compose -f docker-compose.yml up -d"
#   only:
#     - master
