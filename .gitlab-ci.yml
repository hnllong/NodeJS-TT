image: ubuntu

stages:
  - build
  - release
  - deploy

variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

# build:
#   stage: build
#   script:
#     - docker build -t $CONTAINER_TEST_IMAGE .
#     - docker push $CONTAINER_TEST_IMAGE

# release-image:
#   stage: release
#   script:
#     - docker pull $CONTAINER_TEST_IMAGE
#     - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
#     - docker push $CONTAINER_RELEASE_IMAGE

step-deploy-staging:
  stage: deploy
  image: docker/compose:alpine-1.29.2
  only:
    - develop
  script:
    - docker-compose -f docker-compose.dev.yml up -d

step-deploy-production:
  stage: deploy
  image: docker/compose:alpine-1.29.2
  only:
    - master
  script:
    - ssh devops@10.0.0.199 "cd apps/training-server && git checkout master && git fetch && git pull  && docker-compose -f docker-compose.yml up -d"
